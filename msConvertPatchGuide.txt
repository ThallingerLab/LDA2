Guide how to patch msconvert for Thermo file translations
---------------------------------------------------------

msconvert ist a part of the Proteowizard (pwiz) package.
msconvert as downloaded, does not translate the write the precursor mass
in an excat manner. The correct precursor m/z value is of utmost importance
for MS/MS analysis.

The required steps can be only performed in a Windows 7 operating system.
The reason is that Thermo libraries are only available under Windows.

For the compilation environment, install the following programs in the following sequence:
   a) Windows SDK 7.1
   b) Patch form Windows SDK 7.1: http://www.microsoft.com/en-us/download/details.aspx?displaylang=en&id=4422
   c) Visual C++ 2010 Express
   d) Visual C++ 2010 Express to SP1

1) Install the required software according to http://proteowizard.sourceforge.net/user_installation.shtml,
   if not already present.

2) Install the 32-bit version of MSFileReader from Thermo Scientific 
   (http://sjsupport.thermofinnigan.com/public/detail.asp?id=703)

3) Download the Proteowizard Source package (Source, bjam build (includes vendor support))
   from http://proteowizard.sourceforge.net/downloads.shtml and unpack it.

4) Patch the code:
   a) open the file pwiz_aux/msrc/utility/vendor_api/thermo/RawFile.h and look for:
      struct PWIZ_API_DECL PrecursorInfo
      invert the first the attributes of the object structure, so that it looks like:
        struct PWIZ_API_DECL PrecursorInfo
        {
            double isolationMZ;
            double monoisotopicMZ;
            ...
      Save the file!

    b) open the file pwiz_aux/msrc/utility/vendor_api/thermo/RawFile.cpp and look for:
       double ScanInfoImpl::precursorMZ(long index, bool preferMonoisotope) const
       change the code of the method as follows:
         double ScanInfoImpl::precursorMZ(long index, bool preferMonoisotope) const
         {
         //  if (preferMonoisotope)
         //  {
         //    try
         //    {
         //      double mz = trailerExtraValueDouble("Monoisotopic M/Z:");
         //      if (mz > 0)
         //        return mz;
         //  }
         //  catch (RawEgg&)
         //  {
               // almost certainly means that the label was not present
         //  }
         //}
	   IXRawfile3Ptr raw3 = (IXRawfile3Ptr) rawfile_->raw_;
           VARIANT vPrecursorInfos;
           VariantInit(&vPrecursorInfos);
           long nPrecursorInfos = 0;
           HRESULT hr = raw3->GetPrecursorInfoFromScanNum(scanNumber_,&vPrecursorInfos,&nPrecursorInfos);
           if (SUCCEEDED(hr)){
             BYTE* pData;
	     SafeArrayAccessData(vPrecursorInfos.parray, (void**)&pData);
	     for (int i=0; i < nPrecursorInfos; ++i){
	       // Copy the scan information from the safearray buffer
	       PrecursorInfo info;
   	       memcpy(&info,pData + i * sizeof(PrecursorInfo),sizeof(PrecursorInfo));
	       double mz = info.monoisotopicMZ;
               if (mz > 0)
                 return mz;
	       }
             }
             return precursorMZs_[index];
           }

4a) Here the msConvertPatchGuideABSciexAgilent.txt starts
      
5) Build the binaries:
   Open a command prompt. Switch to the directory of the unpacked pwiz package,
   and start the compilation by the command:
   quickbuild.bat --i-agree-to-the-vendor-licenses   
   Keep your fingers crossed that no compilation errors occur. If the msConvertPatchGuideABSciexAgilent.txt
   was executed correctly, the following error will appear several times:
   Missing DLL: Reader_Waters can only identify files, not read them.
   Missing DLL: Reader_Bruker_Test is only testing that it can identify files, not read them.
   There must be two failed tests, Readeer_Agilent_Test.run and Reader_Thermo_Test.run.
   Due to the change the reader returns slightly different output (version in resulting file).
   The following output at the end of the command line output is normal:
   ...failed updating 2 targets...
   ...skipped 2 targets...

   If no other errors occured, there should be a msconvert.exe file
   in a subdirectory of the build directory, which can be used.

6) You will require the following files:
     * agtsampleinforw.dll
     * BaseCommon.dll
     * BaseDataAccess.dll
     * BaseDataAccess.dll.config
     * BaseError.dll
     * BaseTof.dll
     * Clearcore2.Compression.dll
     * Clearcore2.Data.AnalystDataProvider.dll
     * Clearcore2.Data.CommonInterfaces.dll
     * Clearcore2.Data.dll
     * Clearcore2.Data.WiffReader.dll
     * Clearcore2.InternalRawXYProcessing.dll
     * Clearcore2.Muni.dll
     * Clearcore2.ProjectUtilities.dll
     * Clearcore2.RawXYProcessing.dll
     * Clearcore2.StructuredStorage.dll
     * Clearcore2.Utility.dll
     * EULA.MSFileReader
     * fileio.dll
     * fregistry.dll
     * Interop.MSFileReaderLib.dll
     * MassSpecDataReader.dll
     * msconvert.exe
     * MSFileReader.XRawfile2.dll
     * MSFileReader.XRawfile2.SxS.manifest


64-bit compilation:

1) Install the 64-bit version of MSFileReader from Thermo Scientific

2) Microsoft Visual C++ Express cannot compile 64-bit versions. In order to
   a) Create a dummy file called: C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64\vcvars64.bat
   b) Edit the file: C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat
      Exchange the lines
      
      :amd64
      if not exist "%~dp0bin\amd64\vcvars64.bat" goto missing
      call "%~dp0bin\amd64\vcvars64.bat"
      goto :eof
      
      By:

      :amd64
      if not exist "%~dp0bin\amd64\vcvars64.bat" goto missing
      REM Juergen: tHis call does not work and was therefore replaced with command afterwards
      REM call "%~dp0bin\amd64\vcvars64.bat"
      call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.Cmd" /x64
      goto :eof

2a) Here the msConvertPatchGuideABSciexAgilent.txt starts.

3) Start the build by:
   quickbuild.bat --i-agree-to-the-vendor-licenses address-model=64
   The following error will appear several times:
   Missing DLL: Reader_Waters can only identify files, not read them.
   Missing DLL: Reader_Bruker_Test is only testing that it can identify files, not read them.
   For me, the 64-bit failed to update 7 targets and skipped 20 targets, however the required files
   were there, but on different locations.

4) You will require the following files:
	* agtsampleinforw.dll				(build-nt-x86/msvc-release-x86_64)
	* BaseCommon.dll				(build-nt-x86/msvc-release-x86_64)
	* BaseDataAccess.dll				(build-nt-x86/msvc-release-x86_64)
	* BaseDataAccess.dll.config			(build-nt-x86/msvc-release-x86_64)
	* BaseError.dll					(build-nt-x86/msvc-release-x86_64)
	* BaseTof.dll					(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.Compression.dll			(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.Data.AnalystDataProvider.dll	(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.Data.CommonInterfaces.dll		(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.Data.dll				(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.Data.WiffReader.dll		(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.InternalRawXYProcessing.dll	(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.Muni.dll				(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.ProjectUtilities.dll		(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.RawXYProcessing.dll		(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.StructuredStorage.dll		(build-nt-x86/msvc-release-x86_64)
	* Clearcore2.Utility.dll			(build-nt-x86/msvc-release-x86_64)
	* EULA.MSFileReader				(build-nt-x86/msvc-release-x86_64)
     	* fileio_x64.dll                               	(build-nt-x86/msvc-release-x86_64)
     	* fregistry_x64.dll			        (build-nt-x86/msvc-release-x86_64)
	* Interop.MSFileReaderLib.dll			(take this file from the 32-bit build)
	* MassSpecDataReader.dll			(build-nt-x86/msvc-release-x86_64)
	* msconvert.exe					(build-nt-x86/pwiz_tools/commandline/msvc-10.0/release/address-model-64/asynch-exceptions-on/link-static/threading-multi)
	* MSFileReader.XRawfile2.dll			(build-nt-x86/msvc-release-x86_64)
	* MSFileReader.XRawfile2.SxS.manifest		(build-nt-x86/msvc-release-x86_64)
   